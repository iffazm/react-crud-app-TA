version: 2.1

executors:
  node-executor:
    docker:
      - image: cimg/node:18.20.2
    working_directory: ~/project

jobs:
  install_build_and_monitor:
    executor: node-executor
    steps:
      - checkout

      - run:
          name: Measure start time
          command: echo "START_TIME=$(date +%s)" >> $BASH_ENV

      - restore_cache:
          keys:
            - v1-deps-{{ checksum "package-lock.json" }}
            - v1-deps-

      - run:
          name: Install dependencies
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-deps-{{ checksum "package-lock.json" }}

      - run:
          name: Build React App
          command: npm run build

      - run:
          name: Install pidstat (sysstat) for CPU/Memory monitoring
          command: |
            sudo apt-get update
            sudo apt-get install -y sysstat

      - run:
          name: Start app in background & measure time to first response + monitor CPU/mem
          command: |
            npm start > app.log 2>&1 &
            APP_PID=$!

            # Start CPU/memory monitoring
            pidstat -r -u -p $APP_PID 1 30 > usage.log &
            PIDSTAT_PID=$!

            # Poll app until ready
            TIMEOUT=30
            SECONDS=0
            until curl -s http://localhost:3000 > /dev/null; do
              if [ $SECONDS -ge $TIMEOUT ]; then
                echo "App did not respond within $TIMEOUT seconds."
                kill $APP_PID $PIDSTAT_PID
                exit 1
              fi
              sleep 1
            done

            echo "App responded after $SECONDS seconds."
            echo "TIME_TO_FIRST_RESPONSE=$SECONDS" >> $BASH_ENV

            kill $PIDSTAT_PID
            kill $APP_PID

      - run:
          name: Measure end time and calculate total pipeline time
          command: |
            END_TIME=$(date +%s)
            source $BASH_ENV
            TOTAL_TIME=$((END_TIME - START_TIME))
            echo "Total pipeline time: $TOTAL_TIME seconds"
            echo "Time to first response: $TIME_TO_FIRST_RESPONSE seconds"

      - run:
          name: Curl app to verify response content
          command: |
            npm start > app.log 2>&1 &
            APP_PID=$!
            sleep 3
            echo ">>> Response from app:"
            curl -s http://localhost:3000
            kill $APP_PID

      - persist_to_workspace:
          root: .
          paths:
            - build

      - store_artifacts:
          path: usage.log
          destination: cpu-memory-usage

workflows:
  build_workflow:
    jobs:
      - install_build_and_monitor